#!/bin/sh
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

SORT="" #default
PAGE=1
SEARCH=""
REVERSE="DESC"
DOMAIN="https://rargb.to"
DELIM="\t"
CATEGORIES=""

C_LE="31"
C_SE="32"
C_SIZE="33"
C_UPLOADER="35"
C_TIME="36"
C_NAME="39"
COLOR=1

alias ucurl='curl -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.15.2 Chrome/87.0.4280.144 Safari/537.36" -H "Accept-Encoding: gzip, deflate" --compressed'

while [ $# -gt 0 ]
do
  case "$1" in
    -s|--sort)
      case "$2" in
        name) SORT='filename';;
        size) SORT='date';;
        time) SORT='size';;
        se) SORT='seeders';;
        le) SORT='leechers';;
      esac
      shift 2
      ;;
    -h|--help)
        NAME="$(basename "$0")"
        printf "%s [OPTION]... [PATTERN]\nSearch for PATTERN in rarbg.\nExample: %s -s size -p 2 'archlinux'\n\n" "$NAME" "$NAME"
        printf "Options:\n  -s,  --sort TYPE\t\tsort using TYPE that can be: name, size, time, se, le\n"
        printf "  -c,  --categories CATEGORIES\tsearch using CATEGORIES that can be: movies, anime, xxx, tv, apps, games, doc, music, other which can be separated by common delimiters\n"
        printf "  -r,  --reverse\t\tsort in reverse\n"
        printf "  -d,  --domain DOMAIN\t\tset domain to DOMAIN\n"
        printf "  -D,  --delimiter DELIM\tset delimiter to DELIM\n"
        printf "  -p,  --page NUM\t\tshow page at NUM\n"
        printf "  -C,  --no-color\t\tdisable coloring of output\n"
        printf "  -h,  --help\t\t\tshow help\n"
        printf "\nMagnet link will be copied via xclip.\n"
        exit 0
        ;;
    -C|--no-color)
        COLOR=0
        shift;;
    -c|--categories)
        CATEGORIES=$(echo "$2" | sed -E 's/^/\&category[]=/; s/(,|\/|-|\+|\|)/\&category[]=/g')
        shift 2
        ;;
    -r|--reverse)
        REVERSE="ASC"
        shift
        ;;
    -d|--domain)
        DOMAIN="$2"
        shift 2
        ;;
    -D|--delimiter)
        DELIM="$2"
        shift 2;;
    -p|--page)
        PAGE="$2"
        shift 2
        ;;
    *)
        if [ -z "$SEARCH" ]
        then
          SEARCH="$1"
        else
          SEARCH="$SEARCH $1"
        fi
        shift;;
  esac
done

SEARCHP=$(echo "$SEARCH" | sed 's/+/%2B/g; s/;/%3B/g; s/\//%2F/g; s/?/%3F/g; s/\$/%24/g; s/@/%40/g; s/#/%23/g; s/%/%25/g; s/&/%26/g; s/ /+/g;')
[ -n "$SORT" ] && SORT="&order=$SORT&by=$REVERSE"
LINK="$DOMAIN/search/$PAGE/?search=$SEARCHP$SORT$CATEGORY"

t1="$(ucurl -s -L -g "$LINK" | hgrep 'tr +class="lista2"; td')"
links="$(echo "$t1" | hgrep 'td; a +title @p"'"$DOMAIN"'%(href)a\n"')" #links
{
echo "$t1" | hgrep 'td; a +title @p"%i\n"' #name"
echo "$t1" | hgrep 'td +class="lista" +width="150px" @M"<" @p"%i\n"' #time"
echo "$t1" | hgrep 'td +class="lista" +width="100px" @p"%i\n"' #size"
echo "$t1" | hgrep 'font +color @p"%i\n"' #se"
echo "$t1" | hgrep 'td +class="lista" +width="50px" @M"<" @p"%i\n"' #le"
echo "$t1" | hgrep 'td +class="lista" -width +align="center" @p"%i\n"' #uploader"
} | awk 'function print_fields(lines,fields,step) {
        colors[0] = '"$C_NAME"'
        colors[1] = '"$C_TIME"'
        colors[2] = '"$C_SIZE"'
        colors[3] = '"$C_SE"'
        colors[4] = '"$C_LE"'
        colors[5] = '"$C_UPLOADER"'
        ORS = ""
        for (i = 0; i < step; i++) {
            for (j = 0; j < fields; j++) {
                if (j != 0)
                    print "'"$DELIM"'"
                if ('"$COLOR"')
                    print "\033["colors[j]"m"lines[(step*j)+i]"\033[0m"
                else
                    print lines[(step*j)+i]
            }
            printf "\n"
        }
    }

    BEGIN { l=0; fields = 6 }
    { lines[l++]=$0 }
    END {
        if (l >= fields)
        if (l%fields == 0) {
                step = l/fields
                print_fields(lines,fields,step)
        } else
            print "length of some data fields does not match the others"
    }' | nl

[ -z "$links" ] && exit 1
printf 'num> '
read -r NUMBER
[ "$NUMBER" -gt 0 ] && ucurl -g -s "$(echo "$links" | sed "${NUMBER}q;d")" | grep -oE -m 1 'magnet:\?[^"]+' | tee /dev/stderr | xclip -sel clip
